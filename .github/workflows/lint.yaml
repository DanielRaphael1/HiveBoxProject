name: Lint Python and Dockerfile

on:
  push:
    paths:
      - '**.py'
      - 'Dockerfile'
  pull_request:
    paths:
      - '**.py'
      - 'Dockerfile'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      ############################
      # Python Linting with Ruff #
      ############################
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install ruff pytest

      - name: Run ruff (fail only on errors)
        run: |
          ruff check . --select E --output-format=github

      #########################
      # Python Unit Tests     #
      #########################
      - name: Run Unit Tests with pytest
        run: |
          PYTHONPATH=./app pytest tests


      ##################################
      # Dockerfile Linting with Hadolint #
      ##################################
      - name: Install hadolint
        run: |
          wget -qO /bin/hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x /bin/hadolint

      - name: Lint Dockerfile (fail on severity >= 4)
        run: |
            if [ -f Dockerfile ]; then
              hadolint Dockerfile --format json | tee lint-results.json
              echo "import json\nwith open('lint-results.json') as f:\n  issues = json.load(f)\n  high = [i for i in issues if i['severity'] >= 4]\n  print(f'Found {len(high)} high-severity Dockerfile issue(s).')\n  exit(1) if high else exit(0)" | python3
            else
              echo 'No Dockerfile found, skipping hadolint.'
            fi
  
